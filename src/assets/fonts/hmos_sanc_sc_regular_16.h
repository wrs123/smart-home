/*******************************************************************************
 * Size: 16 px
 * Bpp: 4
 * Opts: 
 ******************************************************************************/

#include "lvgl.h"


#ifndef HMOS_SANC_SC_REGULAR_16
#define HMOS_SANC_SC_REGULAR_16 1
#endif

#if HMOS_SANC_SC_REGULAR_16

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t hmos_sanc_sc_regular_16_glyph_bitmap[] = {
    /* U+0025 "%" */
    0x9, 0xfe, 0x60, 0x0, 0x5f, 0x20, 0x7, 0xf5,
    0x7f, 0x30, 0xe, 0x80, 0x0, 0xaa, 0x0, 0xd7,
    0x8, 0xe0, 0x0, 0x8, 0xd2, 0x3f, 0x52, 0xf5,
    0x0, 0x0, 0x1c, 0xff, 0xa0, 0xbc, 0x0, 0x0,
    0x0, 0x2, 0x10, 0x4f, 0x30, 0x0, 0x0, 0x0,
    0x0, 0xd, 0x90, 0x0, 0x0, 0x0, 0x0, 0x7,
    0xf1, 0x3d, 0xfc, 0x20, 0x0, 0x1, 0xf7, 0xe,
    0xa4, 0xcc, 0x0, 0x0, 0x9d, 0x2, 0xf2, 0x4,
    0xf0, 0x0, 0x3f, 0x40, 0xe, 0x81, 0xac, 0x0,
    0xc, 0xb0, 0x0, 0x3d, 0xfc, 0x10,

    /* U+2103 "℃" */
    0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3,
    0xed, 0xe2, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc5,
    0x7, 0xa0, 0x0, 0x6a, 0xb9, 0x30, 0xc, 0x60,
    0x7a, 0x3, 0xed, 0x87, 0xbf, 0x60, 0x3e, 0xed,
    0x21, 0xea, 0x0, 0x0, 0x7c, 0x0, 0x1, 0x0,
    0x8e, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe,
    0xa0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf7,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x70,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xb, 0xd0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x4f, 0x70, 0x0,
    0x4, 0xa0, 0x0, 0x0, 0x0, 0x8f, 0x93, 0x27,
    0xfa, 0x0, 0x0, 0x0, 0x0, 0x5d, 0xff, 0xf8,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x20, 0x0,
    0x0,

    /* U+53F0 "台" */
    0x0, 0x0, 0x2, 0x20, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0xcc, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x9f, 0x20, 0x6, 0x10, 0x0, 0x0, 0x0,
    0x6f, 0x40, 0x0, 0xcd, 0x10, 0x0, 0x0, 0x5f,
    0x70, 0x0, 0x1, 0xdc, 0x0, 0x0, 0x7f, 0x92,
    0x34, 0x67, 0x8b, 0xfa, 0x0, 0xbf, 0xff, 0xff,
    0xed, 0xca, 0x98, 0xf8, 0x3, 0x43, 0x21, 0x0,
    0x0, 0x0, 0x5, 0x80, 0x1, 0x55, 0x55, 0x55,
    0x55, 0x55, 0x10, 0x0, 0x5f, 0xff, 0xff, 0xff,
    0xff, 0xf5, 0x0, 0x5, 0xf0, 0x0, 0x0, 0x0,
    0xf, 0x50, 0x0, 0x5f, 0x0, 0x0, 0x0, 0x0,
    0xf5, 0x0, 0x5, 0xf0, 0x0, 0x0, 0x0, 0xf,
    0x50, 0x0, 0x5f, 0xff, 0xff, 0xff, 0xff, 0xf5,
    0x0, 0x5, 0xf4, 0x44, 0x44, 0x44, 0x4f, 0x50,
    0x0,

    /* U+5EA6 "度" */
    0x0, 0x0, 0x0, 0x1, 0x60, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x2, 0xf5, 0x0, 0x0, 0x0,
    0x0, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
    0x0, 0xe6, 0x23, 0xf3, 0x22, 0x2e, 0x62, 0x20,
    0x0, 0xe7, 0x24, 0xf3, 0x22, 0x2e, 0x62, 0x20,
    0x0, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd0,
    0x0, 0xe5, 0x2, 0xf1, 0x0, 0xe, 0x50, 0x0,
    0x0, 0xf5, 0x2, 0xfd, 0xdd, 0xdf, 0x50, 0x0,
    0x0, 0xf4, 0x0, 0x22, 0x22, 0x22, 0x0, 0x0,
    0x0, 0xf3, 0xcd, 0xdd, 0xdd, 0xdd, 0xd5, 0x0,
    0x3, 0xf1, 0x2a, 0xd3, 0x33, 0x3c, 0xe2, 0x0,
    0x6, 0xe0, 0x0, 0xbc, 0x23, 0xcd, 0x20, 0x0,
    0xb, 0xa0, 0x0, 0xb, 0xff, 0xb0, 0x0, 0x0,
    0x2f, 0x44, 0x7b, 0xfe, 0x89, 0xee, 0xb8, 0x50,
    0x3a, 0xe, 0xb7, 0x30, 0x0, 0x3, 0x7a, 0xc0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+6C14 "气" */
    0x0, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x5, 0xf5, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80,
    0x0, 0x9f, 0x54, 0x44, 0x44, 0x44, 0x44, 0x20,
    0x6, 0xf7, 0x44, 0x44, 0x44, 0x44, 0x42, 0x0,
    0x2f, 0xa1, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x0,
    0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x2, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0,
    0x0, 0x44, 0x44, 0x44, 0x44, 0x4d, 0x80, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 0x80, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 0x90, 0x20,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xb, 0xa0, 0xf4,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0xd2, 0xf1,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0xfc, 0xd0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xaf, 0x50,

    /* U+6E29 "温" */
    0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc, 0xb0, 0x7, 0xff, 0xff, 0xff, 0xf5, 0x0,
    0x2, 0xec, 0x17, 0xb2, 0x22, 0x22, 0xd5, 0x0,
    0x0, 0x1d, 0x47, 0xb2, 0x22, 0x22, 0xc5, 0x0,
    0x11, 0x0, 0x7, 0xff, 0xff, 0xff, 0xf5, 0x0,
    0x7e, 0x50, 0x7, 0xa0, 0x0, 0x0, 0xc5, 0x0,
    0x6, 0xf9, 0x7, 0xff, 0xff, 0xff, 0xf5, 0x0,
    0x0, 0x36, 0x1, 0x22, 0x22, 0x22, 0x20, 0x0,
    0x0, 0x0, 0x3, 0x33, 0x33, 0x33, 0x32, 0x0,
    0x0, 0x97, 0xf, 0xff, 0xff, 0xff, 0xfe, 0x0,
    0x0, 0xe5, 0xf, 0x26, 0xb0, 0xd4, 0x4e, 0x0,
    0x3, 0xf1, 0xf, 0x26, 0xb0, 0xd4, 0x4e, 0x0,
    0x7, 0xc0, 0xf, 0x26, 0xb0, 0xd4, 0x4e, 0x0,
    0xc, 0x80, 0x2f, 0x47, 0xc2, 0xd5, 0x5e, 0x20,
    0x1f, 0x37, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1,
    0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+6E7F "湿" */
    0x1, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x7, 0xe4, 0x8, 0xee, 0xee, 0xee, 0xee, 0x0,
    0x0, 0x9f, 0x69, 0xb4, 0x44, 0x44, 0x6f, 0x0,
    0x0, 0x6, 0x69, 0xb2, 0x22, 0x22, 0x5f, 0x0,
    0x1, 0x0, 0x9, 0xff, 0xff, 0xff, 0xff, 0x0,
    0x4f, 0x60, 0x9, 0xa0, 0x0, 0x0, 0x3f, 0x0,
    0x5, 0xeb, 0x9, 0xff, 0xff, 0xff, 0xff, 0x0,
    0x0, 0x27, 0x1, 0x36, 0xf3, 0x9b, 0x33, 0x0,
    0x0, 0x0, 0x17, 0x3, 0xf0, 0x8a, 0x4, 0x60,
    0x0, 0x6c, 0x1f, 0x33, 0xf0, 0x8a, 0xb, 0x80,
    0x0, 0xba, 0x9, 0xb3, 0xf0, 0x8a, 0x2f, 0x10,
    0x0, 0xf6, 0x1, 0xf6, 0xf0, 0x8a, 0xa8, 0x0,
    0x4, 0xf1, 0x0, 0x65, 0xf0, 0x8a, 0x61, 0x0,
    0x9, 0xc0, 0x11, 0x15, 0xf1, 0x9b, 0x11, 0x10,
    0xe, 0x70, 0xef, 0xff, 0xff, 0xff, 0xff, 0xf1,
    0x1, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+706F "灯" */
    0x0, 0x5, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xe, 0x60, 0x4, 0x44, 0x44, 0x44, 0x40,
    0x0, 0xe, 0x60, 0x1f, 0xff, 0xff, 0xff, 0xf1,
    0x58, 0xe, 0x67, 0xc0, 0x0, 0x2f, 0x20, 0x0,
    0x5e, 0xe, 0xcf, 0x30, 0x0, 0x2f, 0x20, 0x0,
    0x1f, 0x2e, 0xe3, 0x0, 0x0, 0x2f, 0x20, 0x0,
    0xd, 0x6e, 0x60, 0x0, 0x0, 0x2f, 0x20, 0x0,
    0x9, 0x6e, 0x50, 0x0, 0x0, 0x2f, 0x20, 0x0,
    0x0, 0xf, 0x40, 0x0, 0x0, 0x2f, 0x20, 0x0,
    0x0, 0x2f, 0xa0, 0x0, 0x0, 0x2f, 0x20, 0x0,
    0x0, 0x6f, 0xf7, 0x0, 0x0, 0x2f, 0x20, 0x0,
    0x0, 0xca, 0x6f, 0x30, 0x0, 0x2f, 0x20, 0x0,
    0x5, 0xf3, 0xa, 0xd0, 0x0, 0x2f, 0x20, 0x0,
    0x1e, 0xa0, 0x1, 0x41, 0x64, 0x9f, 0x10, 0x0,
    0x6e, 0x10, 0x0, 0x1, 0xef, 0xf9, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+7A7A "空" */
    0x0, 0x0, 0x1, 0xc2, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0xda, 0x0, 0x0, 0x0, 0xae, 0xee,
    0xee, 0xff, 0xee, 0xee, 0xe5, 0xbb, 0x55, 0x55,
    0x55, 0x55, 0x55, 0xe6, 0xb9, 0x0, 0x23, 0x0,
    0x51, 0x0, 0xe6, 0x43, 0x8, 0xfa, 0x0, 0xdf,
    0x81, 0x52, 0x6, 0xdf, 0x70, 0x0, 0x6, 0xee,
    0x60, 0xbf, 0xa2, 0x0, 0x0, 0x0, 0x8, 0xf7,
    0x54, 0x44, 0x44, 0x44, 0x44, 0x44, 0x20, 0x5,
    0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0,
    0x0, 0xd8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xd8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8,
    0x0, 0x0, 0x0, 0xef, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf9, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
    0x42,

    /* U+8D28 "质" */
    0x0, 0x1, 0x22, 0x34, 0x56, 0x79, 0xac, 0x80,
    0x0, 0x5f, 0xff, 0xfe, 0xee, 0xca, 0x97, 0x40,
    0x0, 0x5e, 0x10, 0x0, 0xf, 0x50, 0x0, 0x0,
    0x0, 0x5e, 0x5c, 0xcc, 0xcf, 0xdc, 0xcc, 0xc4,
    0x0, 0x5e, 0x25, 0x55, 0x5f, 0x85, 0x55, 0x51,
    0x0, 0x5e, 0x0, 0x0, 0xf, 0x50, 0x0, 0x0,
    0x0, 0x5e, 0x5, 0xff, 0xff, 0xff, 0xff, 0x0,
    0x0, 0x5d, 0x6, 0xd2, 0x26, 0x42, 0x5f, 0x0,
    0x0, 0x7c, 0x6, 0xd0, 0xe, 0x40, 0x3f, 0x0,
    0x0, 0x9a, 0x6, 0xd0, 0x1f, 0x20, 0x3f, 0x0,
    0x0, 0xd7, 0x5, 0xc0, 0x7f, 0x40, 0x3e, 0x0,
    0x3, 0xf3, 0x0, 0x7, 0xfa, 0xfd, 0x60, 0x0,
    0xa, 0xd0, 0x5a, 0xfd, 0x40, 0x7, 0xee, 0x71,
    0xc, 0x50, 0xda, 0x50, 0x0, 0x0, 0x6, 0xd1,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+91CF "量" */
    0x0, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xe5, 0x0,
    0x0, 0xbb, 0x66, 0x66, 0x66, 0x66, 0xe6, 0x0,
    0x0, 0xbb, 0x66, 0x66, 0x66, 0x66, 0xe6, 0x0,
    0x0, 0xad, 0xcc, 0xcc, 0xcc, 0xcc, 0xe5, 0x0,
    0x1, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10,
    0x5d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd1,
    0x0, 0x57, 0x77, 0x77, 0x77, 0x77, 0x72, 0x0,
    0x0, 0xbb, 0x55, 0x5d, 0x95, 0x55, 0xe6, 0x0,
    0x0, 0xbe, 0xdd, 0xdf, 0xed, 0xdd, 0xf6, 0x0,
    0x0, 0xbc, 0x77, 0x7e, 0xb7, 0x77, 0xe6, 0x0,
    0x0, 0x35, 0x55, 0x5d, 0xa5, 0x55, 0x51, 0x0,
    0x2, 0xee, 0xee, 0xef, 0xfe, 0xee, 0xeb, 0x0,
    0x0, 0x0, 0x0, 0xc, 0x70, 0x0, 0x0, 0x0,
    0x3e, 0xee, 0xee, 0xef, 0xfe, 0xee, 0xee, 0xc0
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t hmos_sanc_sc_regular_16_glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 197, .box_w = 13, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 78, .adv_w = 231, .box_w = 15, .box_h = 15, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 191, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 304, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 432, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 552, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 680, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 808, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 936, .adv_w = 256, .box_w = 14, .box_h = 15, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 1041, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 1161, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -1}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint16_t hmos_sanc_sc_regular_16_unicode_list_0[] = {
    0x0, 0x20de, 0x53cb, 0x5e81, 0x6bef, 0x6e04, 0x6e5a, 0x704a,
    0x7a55, 0x8d03, 0x91aa
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t hmos_sanc_sc_regular_16_cmaps[] =
{
    {
        .range_start = 37, .range_length = 37291, .glyph_id_start = 1,
        .unicode_list = hmos_sanc_sc_regular_16_unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 11, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LV_VERSION_CHECK(8, 0, 0)
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t hmos_sanc_sc_regular_16_cache;
static const lv_font_fmt_txt_dsc_t hmos_sanc_sc_regular_16_font_dsc = {
#else
static lv_font_fmt_txt_dsc_t hmos_sanc_sc_regular_16_font_dsc = {
#endif
    .glyph_bitmap = hmos_sanc_sc_regular_16_glyph_bitmap,
    .glyph_dsc = hmos_sanc_sc_regular_16_glyph_dsc,
    .cmaps = hmos_sanc_sc_regular_16_cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 4,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LV_VERSION_CHECK(8, 0, 0)
    .cache = &hmos_sanc_sc_regular_16_cache
#endif
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LV_VERSION_CHECK(8, 0, 0)
const lv_font_t hmos_sanc_sc_regular_16 = {
#else
lv_font_t hmos_sanc_sc_regular_16 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 16,          /*The maximum line height required by the font*/
    .base_line = 2,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = -1,
    .underline_thickness = 1,
#endif
    .dsc = &hmos_sanc_sc_regular_16_font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};



#endif /*#if HMOS_SANC_SC_REGULAR_16*/

