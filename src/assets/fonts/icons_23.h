/*******************************************************************************
 * Size: 23 px
 * Bpp: 2
 * Opts: 
 ******************************************************************************/
#include "lvgl.h"


#ifndef ICONS_23
#define ICONS_23 1
#endif

#if ICONS_23

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t icon_23_glyph_bitmap[] = {
    /* U+E85C "" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6,
    0xff, 0xe4, 0x0, 0x0, 0x0, 0xff, 0xff, 0xfc,
    0x0, 0x0, 0x1f, 0xff, 0xff, 0xfd, 0x0, 0x1,
    0xff, 0xff, 0xff, 0xfd, 0x0, 0xf, 0xff, 0xff,
    0xff, 0xfc, 0x0, 0xff, 0xff, 0xff, 0xff, 0xfc,
    0x7, 0xff, 0xff, 0xff, 0xaf, 0xf4, 0x2f, 0xff,
    0xff, 0xf4, 0x3f, 0xe0, 0xff, 0xff, 0xff, 0x42,
    0xff, 0xc3, 0xff, 0x9f, 0xf4, 0x2f, 0xff, 0xf,
    0xfc, 0xf, 0x42, 0xff, 0xfc, 0x3f, 0xfc, 0x4,
    0x2f, 0xff, 0xf0, 0xff, 0xfc, 0x2, 0xff, 0xff,
    0xc2, 0xff, 0xfc, 0x2f, 0xff, 0xfe, 0x3, 0xff,
    0xff, 0xff, 0xff, 0xf0, 0xb, 0xff, 0xff, 0xff,
    0xff, 0x80, 0xf, 0xff, 0xff, 0xff, 0xfc, 0x0,
    0xf, 0xff, 0xff, 0xff, 0xc0, 0x0, 0xf, 0xff,
    0xff, 0xfc, 0x0, 0x0, 0xb, 0xff, 0xff, 0x80,
    0x0, 0x0, 0x1, 0xbf, 0x90, 0x0, 0x0,

    /* U+E867 "" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7c, 0x0,
    0x0, 0x0, 0x14, 0x1, 0xf0, 0x3, 0x40, 0x0,
    0xf4, 0x7, 0xc0, 0x3e, 0x0, 0x1, 0xf4, 0x1f,
    0x3, 0xf0, 0x0, 0x2, 0xf4, 0x24, 0x3f, 0x0,
    0x0, 0x2, 0xd0, 0x0, 0xf0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x2, 0xff, 0x40, 0x0, 0x7, 0xfe, 0xf,
    0xfe, 0x0, 0x0, 0x2f, 0xfc, 0x5, 0x50, 0x0,
    0x0, 0x15, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x20, 0x0, 0x14, 0x0, 0x0, 0x3,
    0xe0, 0x0, 0xf4, 0x0, 0x0, 0x3f, 0x2, 0x42,
    0xf4, 0x0, 0x3, 0xf0, 0x1f, 0x2, 0xf4, 0x0,
    0xf, 0x0, 0x7c, 0x1, 0xd0, 0x0, 0x0, 0x1,
    0xf0, 0x0, 0x0, 0x0, 0x0, 0x7, 0xc0, 0x0,
    0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0,

    /* U+E877 "" */
    0x0, 0x1, 0xaf, 0xe9, 0x0, 0x0, 0x0, 0xbf,
    0xff, 0xff, 0x80, 0x0, 0x1f, 0xf9, 0x55, 0xbf,
    0xd0, 0x2, 0xfd, 0x0, 0x0, 0x1f, 0xe0, 0x3f,
    0x40, 0x0, 0x0, 0x7, 0xf0, 0xf0, 0x6, 0xff,
    0xe4, 0x3, 0xc0, 0x1, 0xff, 0xff, 0xfc, 0x0,
    0x0, 0x1f, 0xe0, 0x2, 0xfd, 0x0, 0x0, 0xb8,
    0x0, 0x0, 0xb8, 0x0, 0x0, 0x40, 0xbf, 0x80,
    0x40, 0x0, 0x0, 0x1f, 0xff, 0xd0, 0x0, 0x0,
    0x0, 0xb8, 0xb, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xfc, 0x0, 0x0, 0x0, 0x0,
    0x2, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0,

    /* U+E878 "" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6,
    0xff, 0xe4, 0x0, 0x0, 0x0, 0xff, 0xff, 0xfc,
    0x0, 0x0, 0x1f, 0xe0, 0x2, 0xfd, 0x0, 0x1,
    0xf8, 0x0, 0x0, 0xbd, 0x0, 0xf, 0x80, 0x0,
    0x0, 0xbc, 0x0, 0xf8, 0x0, 0x0, 0x0, 0xbc,
    0x7, 0xc0, 0x0, 0x0, 0x0, 0xf4, 0x2e, 0x0,
    0xf0, 0x3c, 0x2, 0xe0, 0xf4, 0x3, 0xf7, 0xf0,
    0x7, 0xc3, 0xc0, 0x3, 0xff, 0x0, 0xf, 0xf,
    0x0, 0x3, 0xf0, 0x0, 0x3c, 0x3c, 0x0, 0x3f,
    0xf0, 0x0, 0xf0, 0xf4, 0x3, 0xf3, 0xf0, 0x7,
    0xc2, 0xe0, 0xf, 0x3, 0xc0, 0x2e, 0x3, 0xc0,
    0x0, 0x0, 0x0, 0xf0, 0xb, 0xc0, 0x0, 0x0,
    0xf, 0x80, 0xf, 0x80, 0x0, 0x0, 0xbc, 0x0,
    0xf, 0xd0, 0x0, 0x1f, 0xc0, 0x0, 0xf, 0xf5,
    0x17, 0xfc, 0x0, 0x0, 0xb, 0xff, 0xff, 0x80,
    0x0, 0x0, 0x1, 0xbf, 0x90, 0x0, 0x0,

    /* U+E87A "" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0,
    0x0, 0x0, 0x0, 0x2, 0xf0, 0x0, 0x0, 0x0,
    0x0, 0x3, 0xf0, 0x7f, 0xff, 0x90, 0x0, 0x3,
    0xf2, 0xff, 0xff, 0xf4, 0x0, 0xf, 0xf5, 0x0,
    0x1b, 0xfc, 0x0, 0xff, 0xf0, 0x0, 0x2, 0xfc,
    0xf, 0xc3, 0xf0, 0x14, 0x0, 0xfc, 0x28, 0x7,
    0xf2, 0xfe, 0x0, 0xa0, 0x0, 0xbf, 0xf6, 0xff,
    0x80, 0x0, 0xb, 0xe3, 0xf0, 0x2f, 0x80, 0x0,
    0x2d, 0x3, 0xf0, 0x1e, 0x0, 0x0, 0x0, 0xbf,
    0xf0, 0x0, 0x0, 0x0, 0xb, 0xff, 0xf0, 0x0,
    0x0, 0x0, 0x2d, 0x3, 0xf0, 0x0, 0x0, 0x0,
    0x0, 0x3, 0xf0, 0x0, 0x0, 0x0, 0x7, 0x43,
    0xf0, 0x0, 0x0, 0x0, 0x3f, 0x3, 0xf0, 0x0,
    0x0, 0x0, 0x74, 0x3, 0xf0, 0x0, 0x0, 0x0,
    0x0, 0x3, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3,
    0xf0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x80,

    /* U+E882 "" */
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6,
    0xff, 0xe4, 0x0, 0x0, 0x0, 0xff, 0xff, 0xfc,
    0x0, 0x0, 0x1f, 0xd0, 0x2, 0xfc, 0x0, 0x1,
    0xf8, 0x0, 0x0, 0xb0, 0xf0, 0xf, 0x80, 0x0,
    0x0, 0xf, 0xc0, 0xf8, 0x0, 0x0, 0x0, 0xfc,
    0x7, 0xc0, 0x0, 0x0, 0xf, 0xc0, 0x2e, 0x4,
    0x0, 0x0, 0xfc, 0x90, 0xf4, 0x7c, 0x0, 0xf,
    0xc7, 0xc3, 0xc0, 0xfc, 0x0, 0xfc, 0xf, 0xf,
    0x0, 0xfc, 0xf, 0xc0, 0x3c, 0x3c, 0x0, 0xfc,
    0xfc, 0x0, 0xf0, 0xf4, 0x0, 0xff, 0xc0, 0x7,
    0xc2, 0xe0, 0x0, 0xfc, 0x0, 0x2e, 0x3, 0xc0,
    0x0, 0x80, 0x0, 0xf0, 0xb, 0xc0, 0x0, 0x0,
    0xf, 0x80, 0xf, 0x80, 0x0, 0x0, 0xfc, 0x0,
    0xf, 0xc0, 0x0, 0x1f, 0xd0, 0x0, 0xf, 0xf5,
    0x17, 0xfc, 0x0, 0x0, 0xb, 0xff, 0xff, 0x80,
    0x0, 0x0, 0x1, 0xbf, 0x90, 0x0, 0x0
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t icon_23_glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 368, .box_w = 23, .box_h = 22, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 127, .adv_w = 368, .box_w = 23, .box_h = 23, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 260, .adv_w = 368, .box_w = 23, .box_h = 17, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 358, .adv_w = 368, .box_w = 23, .box_h = 22, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 485, .adv_w = 368, .box_w = 23, .box_h = 22, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 612, .adv_w = 368, .box_w = 23, .box_h = 22, .ofs_x = 0, .ofs_y = -2}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint16_t icon_23_unicode_list_0[] = {
    0x0, 0xb, 0x1b, 0x1c, 0x1e, 0x26
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t icon_23_cmaps[] =
{
    {
        .range_start = 59484, .range_length = 39, .glyph_id_start = 1,
        .unicode_list = icon_23_unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 6, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LV_VERSION_CHECK(8, 0, 0)
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t cache;
static const lv_font_fmt_txt_dsc_t font_dsc = {
#else
static lv_font_fmt_txt_dsc_t icon_23_font_dsc = {
#endif
    .glyph_bitmap = icon_23_glyph_bitmap,
    .glyph_dsc = icon_23_glyph_dsc,
    .cmaps = icon_23_cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 2,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LV_VERSION_CHECK(8, 0, 0)
    .cache = &cache
#endif
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LV_VERSION_CHECK(8, 0, 0)
const lv_font_t icons_23 = {
#else
static lv_font_t icons_23 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 23,          /*The maximum line height required by the font*/
    .base_line = 3,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = 0,
    .underline_thickness = 0,
#endif
    .dsc = &icon_23_font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};



#endif /*#if ICONS_23*/

