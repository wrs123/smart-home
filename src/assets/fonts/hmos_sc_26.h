/*******************************************************************************
 * Size: 26 px
 * Bpp: 4
 * Opts: 
 ******************************************************************************/

#include "lvgl.h"


#ifndef HMOS_SC_26
#define HMOS_SC_26 1
#endif

#if HMOS_SC_26

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t hmos_sc_26_glyph_bitmap[] = {
    /* U+002C "," */
    0x3, 0x20, 0xaa, 0x0, 0x80, 0x44, 0x37, 0x0,
    0x0,

    /* U+002E "." */
    0x51, 0xd4,

    /* U+0030 "0" */
    0x0, 0x4, 0xbc, 0xcb, 0x30, 0x0, 0x0, 0x6a,
    0x10, 0x1, 0xb5, 0x0, 0x2, 0xb0, 0x0, 0x0,
    0xc, 0x20, 0xa, 0x30, 0x0, 0x0, 0x4, 0x90,
    0xc, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x39, 0x0,
    0x0, 0x0, 0x0, 0xa3, 0x66, 0x0, 0x0, 0x0,
    0x0, 0x75, 0x85, 0x0, 0x0, 0x0, 0x0, 0x57,
    0x84, 0x0, 0x0, 0x0, 0x0, 0x58, 0x93, 0x0,
    0x0, 0x0, 0x0, 0x48, 0x84, 0x0, 0x0, 0x0,
    0x0, 0x58, 0x85, 0x0, 0x0, 0x0, 0x0, 0x57,
    0x66, 0x0, 0x0, 0x0, 0x0, 0x75, 0x39, 0x0,
    0x0, 0x0, 0x0, 0xa3, 0xc, 0x0, 0x0, 0x0,
    0x0, 0xd0, 0xa, 0x30, 0x0, 0x0, 0x4, 0x90,
    0x2, 0xb0, 0x0, 0x0, 0xc, 0x20, 0x0, 0x6a,
    0x10, 0x1, 0xa5, 0x0, 0x0, 0x4, 0xbb, 0xbb,
    0x40, 0x0,

    /* U+0031 "1" */
    0x0, 0x0, 0x3c, 0x70, 0x1, 0xaa, 0x77, 0x7,
    0xc3, 0x5, 0x71, 0x60, 0x0, 0x57, 0x0, 0x0,
    0x5, 0x70, 0x0, 0x0, 0x57, 0x0, 0x0, 0x5,
    0x70, 0x0, 0x0, 0x57, 0x0, 0x0, 0x5, 0x70,
    0x0, 0x0, 0x57, 0x0, 0x0, 0x5, 0x70, 0x0,
    0x0, 0x57, 0x0, 0x0, 0x5, 0x70, 0x0, 0x0,
    0x57, 0x0, 0x0, 0x5, 0x70, 0x0, 0x0, 0x57,
    0x0, 0x0, 0x5, 0x70, 0x0, 0x0, 0x57, 0x0,
    0x0, 0x5, 0x70,

    /* U+0032 "2" */
    0x0, 0x6, 0xcc, 0xcc, 0x70, 0x0, 0x0, 0xb8,
    0x10, 0x0, 0x7b, 0x0, 0x9, 0x60, 0x0, 0x0,
    0x8, 0x70, 0x1b, 0x0, 0x0, 0x0, 0x1, 0xc0,
    0x2, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xd0, 0x0, 0x0, 0x0, 0x0,
    0x4, 0x90, 0x0, 0x0, 0x0, 0x0, 0xb, 0x30,
    0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x0, 0x0,
    0x0, 0x3, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x1c,
    0x10, 0x0, 0x0, 0x0, 0x0, 0xc3, 0x0, 0x0,
    0x0, 0x0, 0xa, 0x50, 0x0, 0x0, 0x0, 0x0,
    0x87, 0x0, 0x0, 0x0, 0x0, 0x6, 0xa0, 0x0,
    0x0, 0x0, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0,
    0x2, 0xc1, 0x0, 0x0, 0x0, 0x0, 0x1c, 0x20,
    0x0, 0x0, 0x0, 0x0, 0xae, 0xbb, 0xbb, 0xbb,
    0xbb, 0xb5,

    /* U+0033 "3" */
    0x0, 0x18, 0xbb, 0xbb, 0x50, 0x0, 0x2, 0xc5,
    0x0, 0x1, 0x99, 0x0, 0xc, 0x20, 0x0, 0x0,
    0xb, 0x30, 0x26, 0x0, 0x0, 0x0, 0x5, 0x80,
    0x0, 0x0, 0x0, 0x0, 0x3, 0x90, 0x0, 0x0,
    0x0, 0x0, 0x5, 0x70, 0x0, 0x0, 0x0, 0x0,
    0xc, 0x10, 0x0, 0x0, 0x0, 0x3, 0xb4, 0x0,
    0x0, 0x0, 0x9c, 0xee, 0x30, 0x0, 0x0, 0x0,
    0x0, 0x2, 0x99, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x7, 0x90, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc1,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x85, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x76, 0x20, 0x0, 0x0, 0x0,
    0x0, 0x84, 0x85, 0x0, 0x0, 0x0, 0x0, 0xc1,
    0x1c, 0x10, 0x0, 0x0, 0x6, 0x90, 0x3, 0xc5,
    0x0, 0x0, 0x7c, 0x0, 0x0, 0x18, 0xcc, 0xbb,
    0x60, 0x0,

    /* U+0034 "4" */
    0x0, 0x0, 0x0, 0x6, 0x70, 0x0, 0x0, 0x0,
    0x0, 0x1, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2b, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xb, 0x20, 0x0, 0x0,
    0x0, 0x0, 0x5, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76,
    0x0, 0x2, 0x50, 0x0, 0x0, 0x1c, 0x0, 0x0,
    0x48, 0x0, 0x0, 0xa, 0x30, 0x0, 0x4, 0x80,
    0x0, 0x3, 0xa0, 0x0, 0x0, 0x48, 0x0, 0x0,
    0xc1, 0x0, 0x0, 0x4, 0x80, 0x0, 0x67, 0x0,
    0x0, 0x0, 0x48, 0x0, 0xb, 0xbb, 0xbb, 0xbb,
    0xbc, 0xdb, 0xb6, 0x0, 0x0, 0x0, 0x0, 0x48,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x80, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x48, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x4, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x48, 0x0, 0x0,

    /* U+0035 "5" */
    0x0, 0x6d, 0xbb, 0xbb, 0xbb, 0x70, 0x0, 0x84,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xa1, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xa0,
    0x0, 0x0, 0x0, 0x0, 0x3, 0x80, 0x0, 0x0,
    0x0, 0x0, 0x6, 0x64, 0xab, 0xca, 0x40, 0x0,
    0x8, 0xb8, 0x10, 0x2, 0x9a, 0x0, 0xa, 0x40,
    0x0, 0x0, 0x7, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xc1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x76, 0x17, 0x0, 0x0, 0x0, 0x0, 0xc1,
    0xb, 0x30, 0x0, 0x0, 0x6, 0x90, 0x1, 0xc5,
    0x0, 0x0, 0x7b, 0x0, 0x0, 0x7, 0xbb, 0xbb,
    0x50, 0x0,

    /* U+0036 "6" */
    0x0, 0x0, 0x0, 0x9, 0x40, 0x0, 0x0, 0x0,
    0x0, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0,
    0x0, 0x0, 0x0, 0x0, 0x8, 0x40, 0x0, 0x0,
    0x0, 0x0, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xb0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x30, 0x0,
    0x0, 0x0, 0x0, 0x2a, 0x8c, 0xcb, 0x60, 0x0,
    0x0, 0xcb, 0x30, 0x0, 0x6c, 0x20, 0x5, 0xa0,
    0x0, 0x0, 0x2, 0xc0, 0xc, 0x10, 0x0, 0x0,
    0x0, 0x76, 0x39, 0x0, 0x0, 0x0, 0x0, 0x2b,
    0x66, 0x0, 0x0, 0x0, 0x0, 0xd, 0x76, 0x0,
    0x0, 0x0, 0x0, 0xd, 0x58, 0x0, 0x0, 0x0,
    0x0, 0x2b, 0x1d, 0x0, 0x0, 0x0, 0x0, 0x76,
    0x9, 0x60, 0x0, 0x0, 0x2, 0xc0, 0x0, 0xb8,
    0x0, 0x0, 0x4c, 0x20, 0x0, 0x6, 0xbb, 0xbb,
    0x71, 0x0,

    /* U+0037 "7" */
    0x5b, 0xbb, 0xbb, 0xbb, 0xbb, 0xd7, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xb1, 0x0, 0x0, 0x0, 0x0,
    0x2, 0xb0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x50,
    0x0, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x58, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xb2, 0x0, 0x0, 0x0, 0x0, 0x1, 0xb0, 0x0,
    0x0, 0x0, 0x0, 0x7, 0x50, 0x0, 0x0, 0x0,
    0x0, 0xd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xa3, 0x0, 0x0,
    0x0, 0x0, 0x1, 0xc0, 0x0, 0x0, 0x0, 0x0,
    0x7, 0x60, 0x0, 0x0, 0x0, 0x0, 0xc, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x49, 0x0, 0x0, 0x0,
    0x0, 0x0, 0xa3, 0x0, 0x0, 0x0, 0x0, 0x1,
    0xc0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x70, 0x0,
    0x0, 0x0,

    /* U+0038 "8" */
    0x0, 0x7, 0xbb, 0xbb, 0x60, 0x0, 0x0, 0xb6,
    0x0, 0x0, 0x7b, 0x0, 0x8, 0x50, 0x0, 0x0,
    0x6, 0x70, 0xc, 0x0, 0x0, 0x0, 0x0, 0xd0,
    0xc, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xc, 0x0,
    0x0, 0x0, 0x0, 0xc0, 0x7, 0x50, 0x0, 0x0,
    0x6, 0x60, 0x0, 0x97, 0x0, 0x1, 0x78, 0x0,
    0x0, 0x7, 0xfc, 0xcf, 0x60, 0x0, 0x0, 0xa6,
    0x10, 0x1, 0x7a, 0x0, 0xb, 0x30, 0x0, 0x0,
    0x3, 0xa0, 0x58, 0x0, 0x0, 0x0, 0x0, 0x94,
    0x93, 0x0, 0x0, 0x0, 0x0, 0x49, 0xb2, 0x0,
    0x0, 0x0, 0x0, 0x2a, 0x93, 0x0, 0x0, 0x0,
    0x0, 0x49, 0x58, 0x0, 0x0, 0x0, 0x0, 0x94,
    0xc, 0x20, 0x0, 0x0, 0x3, 0xc0, 0x2, 0xc5,
    0x0, 0x0, 0x6c, 0x10, 0x0, 0x7, 0xbb, 0xbb,
    0x70, 0x0,

    /* U+0039 "9" */
    0x0, 0x18, 0xbb, 0xbb, 0x50, 0x0, 0x4, 0xc3,
    0x0, 0x0, 0x7a, 0x0, 0x1c, 0x0, 0x0, 0x0,
    0x5, 0x80, 0x85, 0x0, 0x0, 0x0, 0x0, 0xb1,
    0xc0, 0x0, 0x0, 0x0, 0x0, 0x75, 0xd0, 0x0,
    0x0, 0x0, 0x0, 0x67, 0xc0, 0x0, 0x0, 0x0,
    0x0, 0x86, 0x85, 0x0, 0x0, 0x0, 0x0, 0xe3,
    0x1c, 0x10, 0x0, 0x0, 0x9, 0xd0, 0x4, 0xc5,
    0x0, 0x3, 0xaf, 0x50, 0x0, 0x17, 0xbb, 0xb8,
    0x9b, 0x0, 0x0, 0x0, 0x0, 0x2, 0xe2, 0x0,
    0x0, 0x0, 0x0, 0xb, 0x70, 0x0, 0x0, 0x0,
    0x0, 0x5c, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd2,
    0x0, 0x0, 0x0, 0x0, 0x8, 0x70, 0x0, 0x0,
    0x0, 0x0, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc3, 0x0, 0x0, 0x0, 0x0, 0x6, 0x80, 0x0,
    0x0, 0x0,

    /* U+003A ":" */
    0x98, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x32, 0x88
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t hmos_sc_26_glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 89, .box_w = 3, .box_h = 6, .ofs_x = 1, .ofs_y = -4},
    {.bitmap_index = 9, .adv_w = 87, .box_w = 2, .box_h = 2, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 11, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 125, .adv_w = 223, .box_w = 7, .box_h = 19, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 192, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 306, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 420, .adv_w = 223, .box_w = 13, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 544, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 658, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 772, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 886, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1000, .adv_w = 223, .box_w = 12, .box_h = 19, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1114, .adv_w = 95, .box_w = 2, .box_h = 14, .ofs_x = 2, .ofs_y = 0}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint8_t hmos_sc_26_glyph_id_ofs_list_0[] = {
    0, 0, 1, 0, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t hmos_sc_26_cmaps[] =
{
    {
        .range_start = 44, .range_length = 15, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = hmos_sc_26_glyph_id_ofs_list_0, .list_length = 15, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LV_VERSION_CHECK(8, 0, 0)
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t hmos_sc_26_cache;
static const lv_font_fmt_txt_dsc_t hmos_sc_26_font_dsc = {
#else
static lv_font_fmt_txt_dsc_t font_dsc = {
#endif
    .glyph_bitmap = hmos_sc_26_glyph_bitmap,
    .glyph_dsc = hmos_sc_26_glyph_dsc,
    .cmaps = hmos_sc_26_cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 4,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LV_VERSION_CHECK(8, 0, 0)
    .cache = &hmos_sc_26_cache
#endif
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LV_VERSION_CHECK(8, 0, 0)
const lv_font_t hmos_sc_26 = {
#else
lv_font_t hmos_sc_26 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 23,          /*The maximum line height required by the font*/
    .base_line = 4,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = -2,
    .underline_thickness = 1,
#endif
    .dsc = &hmos_sc_26_font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};



#endif /*#if HMOS_SC_26*/

